{"version":3,"sources":["Session.jsx","Break.jsx","Clock.jsx","Timer.jsx","App.js","serviceWorker.js","index.js"],"names":["Session","props","react_default","a","createElement","className","id","onClick","handleClick","sessionLength","Break","breakLength","Clock","clockText","handleStartStop","handleReset","minutes","seconds","Timer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","intervalID","intitialized","bind","assertThisInitialized","handleChange","timeChecker","secondsHandler","playAlarm","setInterval","timerCount","setState","clearInterval","e","target","type","sMinutes","bMinutes","test","audio","document","getElementById","currentTime","pause","play","src_Session","src_Break","src_Clock","src","React","Component","App","src_Timer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d77b395.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Session = (props) => {\r\n    return<div className=\"containerSession\">\r\n        <p id=\"session-label\">Session Length</p>\r\n        <button id=\"session-increment\" onClick={props.handleClick}>+</button>\r\n        <button id=\"session-decrement\" onClick={props.handleClick}>-</button>\r\n        <div id=\"session-length\" className=\"textSB\">{props.sessionLength}</div>\r\n    </div>\r\n}\r\n\r\nexport default Session;","import React from 'react';\r\n\r\nconst Break = (props)=>{\r\n    return<div className=\"containerBreak\">\r\n        <p id=\"break-label\">Break Length</p>\r\n        <button id=\"break-increment\" onClick={props.handleClick}>+</button>\r\n        <button id=\"break-decrement\" onClick={props.handleClick}>-</button>\r\n        <div id=\"break-length\" className=\"textSB\">{props.breakLength}</div>\r\n    </div>\r\n}\r\n\r\nexport default Break;","import React from 'react';\r\n\r\nconst Clock = (props) => {\r\n    return<div className=\"containerClock\">\r\n        <h3 id=\"timer-label\">{props.clockText}</h3>\r\n        <button id=\"start_stop\" onClick={props.handleStartStop}>Start/Stop</button>\r\n        <button id=\"reset\" onClick={props.handleReset}>Reset</button>\r\n        <div id=\"time-left\" className=\"time\">{props.minutes < 10 ? \"0\" + props.minutes : props.minutes}:{props.seconds < 10 ? \"0\" + props.seconds : props.seconds}</div>\r\n    </div>\r\n}\r\n\r\nexport default Clock;","import React from 'react';\r\nimport Session from './Session.jsx';\r\nimport Break from './Break.jsx';\r\nimport Clock from './Clock.jsx';\r\nimport './main.css' ;\r\nclass Timer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sessionLength: 25,\r\n            breakLength: 5,\r\n            clockText: \"Shall We Begin?\",\r\n            minutes: 25,\r\n            seconds: 0,\r\n            intervalID: \"\",\r\n            intitialized: false,\r\n        }\r\n        this.handleClick=this.handleClick.bind(this);\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleStartStop=this.handleStartStop.bind(this);\r\n        this.handleReset=this.handleReset.bind(this);\r\n        this.timeChecker=this.timeChecker.bind(this);\r\n        this.secondsHandler=this.secondsHandler.bind(this);\r\n        this.playAlarm=this.playAlarm.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        let intervalID = setInterval(this.timerCount.bind(this), 1000);\r\n        this.setState({intervalID: intervalID});\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.state.intervalID);\r\n    }\r\n    timerCount(){\r\n        if(this.state.intitialized){\r\n            this.setState({seconds: this.state.seconds - 1});\r\n        }\r\n        this.timeChecker();\r\n    }\r\n    timeChecker(){\r\n        if(this.state.seconds===-1 && this.state.minutes!==0){\r\n            this.setState({seconds: 59, minutes: this.state.minutes - 1})\r\n        }\r\n        if(this.state.seconds===-1 && this.state.minutes===0){\r\n            this.state.clockText === \"Session\" ? this.setState({clockText: \"Break\", minutes: this.state.breakLength, seconds: 0}) : this.setState({clockText: \"Session\", minutes: this.state.sessionLength, seconds: 0});\r\n            this.playAlarm();\r\n        }\r\n    }\r\n    handleChange(e){\r\n        let id = e.target.id\r\n        switch (id){\r\n            case \"break-decrement\":\r\n                if(this.state.breakLength > 1 && !this.state.intitialized){\r\n                    this.setState({breakLength: this.state.breakLength - 1});\r\n                    if(this.state.clockText===\"Break\"){this.setState({minutes: this.state.breakLength - 1, seconds: 0})};\r\n                };\r\n                break;\r\n            case \"break-increment\":\r\n                if(this.state.breakLength <= 59 && !this.state.intitialized){\r\n                    this.setState({breakLength: this.state.breakLength + 1});\r\n                    if(this.state.clockText===\"Break\"){this.setState({minutes: this.state.breakLength + 1, seconds: 0})};\r\n                };\r\n                break;\r\n            case \"session-decrement\":\r\n                if(this.state.sessionLength > 1 && !this.state.intitialized){this.setState({sessionLength: this.state.sessionLength - 1});\r\n                    if(this.state.clockText===\"Session\"||this.state.clockText===\"Shall We Begin?\"){this.setState({minutes: this.state.sessionLength - 1, seconds: 0})};\r\n                };\r\n                break;\r\n            case \"session-increment\":\r\n                if(this.state.sessionLength <= 59 && !this.state.intitialized){this.setState({sessionLength: this.state.sessionLength + 1});\r\n                    if(this.state.clockText===\"Session\"||this.state.clockText===\"Shall We Begin?\"){this.setState({minutes: this.state.sessionLength + 1, seconds: 0})};  \r\n                };\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    secondsHandler(type){\r\n        let sMinutes = this.state.sessionLength;\r\n        let bMinutes = this.state.breakLength;\r\n        type === \"session\"  ? this.setState({minutes: sMinutes, seconds: 0}) : this.setState({minutes: bMinutes, seconds: 0});\r\n    }\r\n    handleClick(e){\r\n        if(/decrement$|increment$/.test(e.target.id)){\r\n            this.handleChange(e);\r\n        }\r\n    }\r\n    handleStartStop(){\r\n        this.setState({intitialized: !this.state.intitialized, clockText: this.state.clockText === \"Break\" ? \"Break\": \"Session\"});\r\n    }\r\n    handleReset(){\r\n        const audio = document.getElementById(\"beep\");\r\n        this.setState({minutes: 25, seconds: 0, breakLength: 5, sessionLength: 25, intitialized: false, clockText: \"Shall We Begin?\"});\r\n        if(audio.currentTime!==0){\r\n            audio.pause();\r\n            audio.currentTime=0;\r\n        }\r\n    }\r\n    playAlarm(){\r\n        const audio = document.getElementById(\"beep\");\r\n        audio.play();\r\n    }\r\n    render(){\r\n       return<div className=\"containerApp\">\r\n           <div className=\"containerSB\">\r\n            <Session sessionLength={this.state.sessionLength} handleClick={this.handleClick} />\r\n            <Break breakLength={this.state.breakLength} handleClick={this.handleClick} />\r\n           </div>\r\n           <Clock clockText={this.state.clockText} handleStartStop={this.handleStartStop} handleReset={this.handleReset} minutes={this.state.minutes} seconds={this.state.seconds}/>\r\n           <audio src=\"./alarm.mp3\" id=\"beep\"></audio>\r\n       </div>\r\n    }\r\n}\r\n\r\nexport default Timer;","import React from 'react';\nimport './App.css';\nimport Timer from './Timer.jsx'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}